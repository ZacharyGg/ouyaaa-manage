server:
  port: 7006
spring:
  application:
    name: ouyaaa-produce
  session:
    store-type: none
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/upms?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
      username: root
      password: 123456
  cloud:
    stream:
      binders: #配置要绑定的rabbitmq的服务信息；
        defaultRabbit: # 表示定义的名称，用于于binding整合
          type: rabbit # 消息组件类型
          environment: # 设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:
                host: 127.0.0.1
                port: 5672
                username: hlxd
                password: hlxd
                virtual-host: /
      bindings:   # 服务的整合处理
        input:  # 通道的名称
          destination: StreamExchange   # 表示要使用的Exchange名称定义
          content-type: application/json   # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit    # 设置要绑定的消息服务的具体设置
          group: Stream-group # 进行操作的分组，实际上就表示持久化
  rabbitmq:   #这里把Stream依赖的mq和通常使用的分开
    host: rabbitmq.com
    port: 5672
    username: hlxd
    password: hlxd
    virtual-host: /

eureka:
  client:
    service-url:
      defaultZone: http://edmin:edmin@127.0.0.1:9001/eureka/
  instance:
    instance-id: ouyaaaproduce.com
    prefer-ip-address: true

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: package com.ouyaaa.manage.basis.entity;
  #typeEnumsPackage: com.baomidou.springboot.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 1
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
    #key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    #自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
security:
  oauth2:
    client:
      client-id: ouyaaa
      client-secret: ouyaaa
      access-token-uri: http://127.0.0.1:9900/oauth/token
      user-authorization-uri: http://127.0.0.1:9900/oauth/authorize
    resource:
#      jwt:
#        key-uri: http://127.0.0.1:9900/oauth/token_key
      token-info-uri: http://localhost:9900/oauth/check_token